package Programmers.Lv2.Q12924;

public class Tuna {
    // (0.02ms, 75MB)
    public int solution(int n) {
        // 연속된 숫자를 n부터 시작한다고 하면
        // 2개의 연속된 숫자는 2n + 1 (n, n + 1)
        // 3개의 연속된 숫자는 3n + 3 (n, n + 1, n + 2)
        // 4개의 연속된 숫자는 4n + 6 (n, n + 1, n + 2, n + 3)
        // 5개의 연속된 숫자는 5n + 10 (n, n + 1, n + 2, n + 3, n + 4)
        // 6개의 연속된 숫자는 6n + 15
        // 7개의 연속된 숫자는 7n + 21
        // k개의 연속된 숫자는 kn + (k - 1)k / 2

        // 연속된 숫자가 n 하나만 존재하는 경우를 고려하여 우선 1
        int answer = 1;

        // 2개의 연속된 숫자부터 n개의 연속된 숫자까지 탐색
        for (int i = 2; i < n; i++) {
            // 나머지로 가져야하는 숫자부터 제거
            // k개의 연속된 숫자라면 1부터 k-1까지의 합을 나머지로 가져야함
            int temp = n - i * (i - 1) / 2;

            // 주어진 수에 나머지를 마이너스한 수치가 음수라면 이후부터는 연속된 숫자가 안나옴
            if (temp <= 0) break;

            // 나머지를 마이너스한 수치가 i로 나누어떨어지면 i개의 연속된 숫자
            if (temp % i == 0) answer++;
        }

        return answer;
    }
}
